<?xml version="1.0" encoding="utf-8"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find baxter_gazebo)/worlds/baxter.world"/-->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="cat '$(find dvrk_model)/model/both_psms.urdf'" />

  <!-- Publish a static transform between the world and the base of the robot -->
  <!--node pkg="tf2_ros" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 0 world base" /-->


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-file $(find dvrk_model)/model/both_psms.urdf -urdf -z 0.93 -model dvrk" />
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="cat '$(find cwru_baxter_sim)/cwru_baxter.urdf'" />
  <!-- ros_control baxter launch file -->
  <!--include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control.launch" /-->

</launch>
